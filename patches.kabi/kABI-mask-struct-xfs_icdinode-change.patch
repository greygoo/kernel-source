From: Nikolay Borisov <nborisov@suse.com>
Date: Wed, 15 Mar 2017 10:16:23 +0200
Subject: [PATCH] kABI: mask struct xfs_icdinode change
References: bsc#1024788
Patch-mainline: Never, kABI

Since we change a uint16 to, essentially, a uint32 but only for the incore
dinode object mask that out to prevent kabi failure. This is a private,
dynamically allocated struct so there shouldn't be problems changing its
size. The correct marshalling to xfs_dinode occurs so on-disk format is not
being changed.

Signed-off-by: Nikolay Borisov <nborisov@suse.com>
---
 fs/xfs/xfs_log_format.h | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/fs/xfs/xfs_log_format.h b/fs/xfs/xfs_log_format.h
index 1149522781ce..f3b59d10b986 100644
--- a/fs/xfs/xfs_log_format.h
+++ b/fs/xfs/xfs_log_format.h
@@ -559,7 +559,11 @@ typedef struct xfs_icdinode {
 	__uint8_t	di_forkoff;	/* attr fork offs, <<3 for 64b align */
 	__int8_t	di_aformat;	/* format of attr fork's data */
 	__uint32_t	di_dmevmask;	/* DMIG event mask */
+#ifndef __GENKSYMS__
 	atomic_t	di_dmstate;	/* DMIG state info */
+#else
+	__uint16_t	di_dmstate
+#endif
 	__uint16_t	di_flags;	/* random flags, XFS_DIFLAG_... */
 	__uint32_t	di_gen;		/* generation number */
 
-- 
2.7.4


